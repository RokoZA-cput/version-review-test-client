/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.heinvdende.versionreview.test.client.ui;

import com.heinvdende.versionreview.test.client.domain.ChangedCodeFile;
import com.heinvdende.versionreview.test.client.domain.FileChange;
import com.heinvdende.versionreview.test.client.domain.MainTask;
import com.heinvdende.versionreview.test.client.domain.Project;
import com.heinvdende.versionreview.test.client.domain.Task;
import com.heinvdende.versionreview.test.client.domain.TaskClass;
import com.heinvdende.versionreview.test.client.domain.User;
import com.heinvdende.versionreview.test.client.generate.GenObjects;
import com.heinvdende.versionreview.test.client.services.filefunctions.CompareFilesService;
import com.heinvdende.versionreview.test.client.services.filefunctions.impl.CompareFilesServiceImpl;
import com.heinvdende.versionreview.test.client.ui.components.CustomComponents;
import com.heinvdende.versionreview.test.client.ui.components.TaskTreeNode;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JTree;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeSelectionModel;
import syntaxhighlight.SyntaxHighlighter;
import syntaxhighlight.SyntaxHighlighterPane;

/**
 *
 * @author Heinrich
 */
public class ViewCodeUI extends JFrame implements TreeSelectionListener {

    /**
     * Creates new form ViewCodeUI
     */
    public ViewCodeUI() {
        initComponents();
        populateProjectsTree();
        maximizeFrame();
    }

    // UI initilization functions
    
    private void maximizeFrame() {
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
    }
    
    private void populateProjectsTree() {
        DefaultMutableTreeNode projectNode;
        TaskTreeNode taskNode;
        
        
        Project project = GenObjects.getInstance().getPurchaseProject();
        projectNode = new DefaultMutableTreeNode(project.getName());
        
        List<Task> tasks = project.getTasks();
        for(Task t : tasks) {
            taskNode = new TaskTreeNode(t);
            projectNode.add(taskNode);
        }
        
        treeTasks.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        treeTasks.addTreeSelectionListener(this);
        treeTasks.setModel(new DefaultTreeModel(projectNode));
    }
    
    private void print(String text) {
        textAreaOutput.append("> " + text + "\n");
    }
    
    private MainTask getCurrentTask() {
        // Check if selected item is a task
        if(treeTasks.getSelectionPath().getLastPathComponent() instanceof TaskTreeNode) {
            TaskTreeNode taskNode = (TaskTreeNode) treeTasks.getSelectionPath().getLastPathComponent();
            return (MainTask) taskNode.getTask();
        }
        
        return null;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        panelTop = new javax.swing.JPanel();
        buttonBack = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        panelProjectTree = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        treeTasks = new javax.swing.JTree();
        textSearch = new javax.swing.JTextField();
        panelProjectFilters = new javax.swing.JPanel();
        buttonRefresh = new javax.swing.JButton();
        panelFilesTab = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaOutput = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listInvolvedUsers = new javax.swing.JList();
        buttonOpenUserVersion = new javax.swing.JButton();
        radioViewUserCode = new javax.swing.JRadioButton();

        jMenuItem1.setText("clear");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonBack.setText("Back");
        buttonBack.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        buttonBack.setFocusable(false);

        javax.swing.GroupLayout panelTopLayout = new javax.swing.GroupLayout(panelTop);
        panelTop.setLayout(panelTopLayout);
        panelTopLayout.setHorizontalGroup(
            panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTopLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonBack)
                .addContainerGap())
        );
        panelTopLayout.setVerticalGroup(
            panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTopLayout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addComponent(buttonBack))
        );

        jPanel1.setForeground(new java.awt.Color(181, 181, 194));

        jSplitPane2.setForeground(new java.awt.Color(240, 240, 240));
        jSplitPane2.setToolTipText("");

        treeTasks.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        treeTasks.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane1.setViewportView(treeTasks);

        textSearch.setFont(new java.awt.Font("Arial", 2, 11)); // NOI18N
        textSearch.setText("Search...");
        textSearch.setDragEnabled(true);

        panelProjectFilters.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout panelProjectFiltersLayout = new javax.swing.GroupLayout(panelProjectFilters);
        panelProjectFilters.setLayout(panelProjectFiltersLayout);
        panelProjectFiltersLayout.setHorizontalGroup(
            panelProjectFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelProjectFiltersLayout.setVerticalGroup(
            panelProjectFiltersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        buttonRefresh.setText("R");
        buttonRefresh.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        buttonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelProjectTreeLayout = new javax.swing.GroupLayout(panelProjectTree);
        panelProjectTree.setLayout(panelProjectTreeLayout);
        panelProjectTreeLayout.setHorizontalGroup(
            panelProjectTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProjectTreeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
            .addGroup(panelProjectTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelProjectTreeLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(panelProjectTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(panelProjectFilters, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        panelProjectTreeLayout.setVerticalGroup(
            panelProjectTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProjectTreeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelProjectTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonRefresh)
                    .addComponent(textSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(714, Short.MAX_VALUE))
            .addGroup(panelProjectTreeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelProjectTreeLayout.createSequentialGroup()
                    .addGap(37, 37, 37)
                    .addComponent(panelProjectFilters, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)))
        );

        jSplitPane2.setLeftComponent(panelProjectTree);

        panelFilesTab.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jSplitPane2.setRightComponent(panelFilesTab);

        jScrollPane2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        textAreaOutput.setEditable(false);
        textAreaOutput.setColumns(20);
        textAreaOutput.setRows(4);
        textAreaOutput.setBorder(null);
        textAreaOutput.setComponentPopupMenu(jPopupMenu1);
        jScrollPane2.setViewportView(textAreaOutput);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Users Involved"));

        jScrollPane3.setViewportView(listInvolvedUsers);

        buttonOpenUserVersion.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        buttonOpenUserVersion.setText("Open User's Version");
        buttonOpenUserVersion.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        buttonOpenUserVersion.setFocusPainted(false);
        buttonOpenUserVersion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOpenUserVersionActionPerformed(evt);
            }
        });

        radioViewUserCode.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        radioViewUserCode.setText("View Only Selected Users");
        radioViewUserCode.setFocusPainted(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(radioViewUserCode)
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(buttonOpenUserVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(173, Short.MAX_VALUE)
                .addComponent(buttonOpenUserVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioViewUserCode)
                .addContainerGap())
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 74, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonOpenUserVersionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOpenUserVersionActionPerformed
        try
            {
                MainTask task = getCurrentTask();
                if(task != null) {
                    if(task.getClasses().size() > 0) {
                        //panelFilesTab.removeAll();

                        User user;
                        ChangedCodeFile finalFile;
                        for(TaskClass taskClass : task.getClasses()) {
                            user = (User) listInvolvedUsers.getSelectedValue();
                            finalFile = (ChangedCodeFile) taskClass.getUserFinalFiles().get(user);

                            SyntaxHighlighter highlighter = (SyntaxHighlighter) CustomComponents.getFileTab(finalFile);
                            highlighter.setHighlightOnMouseOver(true);
                            highlighter.getHighlighter().addMouseListener(new ViewCodeUI.HighlightLineListener(highlighter.getHighlighter(), finalFile));
                            highlighter.setName(highlighter.getName() + " (" + user.getUsername() + ")");
                            panelFilesTab.add(highlighter);

                        }

                        panelFilesTab.setSelectedIndex(panelFilesTab.getTabCount()-1);
                    }
                    else
                        System.out.println("not classes");
                }
            }
            catch(Exception e) {
                print(e.getMessage());
            }
    }//GEN-LAST:event_buttonOpenUserVersionActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        textAreaOutput.setText("");
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void buttonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRefreshActionPerformed
        treeTasks.setSelectionPath(treeTasks.getSelectionPath());
    }//GEN-LAST:event_buttonRefreshActionPerformed

    /**
     * @param args the command line arguments
     */
    /*
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewCodeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewCodeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewCodeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewCodeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewCodeUI().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBack;
    private javax.swing.JButton buttonOpenUserVersion;
    private javax.swing.JButton buttonRefresh;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JList listInvolvedUsers;
    private javax.swing.JTabbedPane panelFilesTab;
    private javax.swing.JPanel panelProjectFilters;
    private javax.swing.JPanel panelProjectTree;
    private javax.swing.JPanel panelTop;
    private javax.swing.JRadioButton radioViewUserCode;
    private javax.swing.JTextArea textAreaOutput;
    private javax.swing.JTextField textSearch;
    private javax.swing.JTree treeTasks;
    // End of variables declaration//GEN-END:variables

    
    
    @Override
    public void valueChanged(TreeSelectionEvent e) {
        JTree tree = (JTree) e.getSource(); 
        
        // Check if node is in fact a task node
        if(tree.getSelectionPath().getLastPathComponent() instanceof TaskTreeNode) {
            TaskTreeNode taskNode = (TaskTreeNode) tree.getSelectionPath().getLastPathComponent();

            MainTask task = (MainTask) taskNode.getTask();
            List<User> users = task.getUsers();

            // Populate Users task
            listInvolvedUsers.removeAll();

            DefaultListModel<User> model = new DefaultListModel<>();
            for(User u : users) {
                model.addElement(u);
            }
            listInvolvedUsers.setModel(model);
            listInvolvedUsers.setSelectedIndex(0);

            // Show file tabs
            try {
                if(task.getClasses().size() > 0) {
                    CompareFilesService service = new CompareFilesServiceImpl();

                    panelFilesTab.removeAll();

                    for(TaskClass taskClass : task.getClasses()) {
                        taskClass = service.highlightFileChanges(taskClass);

                        SyntaxHighlighter highlighter = (SyntaxHighlighter) CustomComponents.getFileTab(taskClass.getFinalFile());
                        highlighter.setHighlightOnMouseOver(true);
                        highlighter.getHighlighter().addMouseListener(new ViewCodeUI.HighlightLineListener(highlighter.getHighlighter(), taskClass.getFinalFile()));

                        panelFilesTab.add(highlighter);
                    }

                    panelFilesTab.setSelectedIndex(0);
                }
                else
                    System.out.println("not classes");
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }
    
    private class HighlightLineListener implements MouseListener {

        private SyntaxHighlighterPane highlighter;
        private ChangedCodeFile file;
        
        public HighlightLineListener(SyntaxHighlighterPane highlighter, ChangedCodeFile file) {
            this.highlighter = highlighter;
            this.file = file;
            highlighter.setHighlightOnMouseOver(true);
        }
        
        @Override
        public void mouseClicked(MouseEvent e) {
        }

        @Override
        public void mousePressed(MouseEvent e) {
            // Future implementation
            // List<Integer> lines = highlighter.getHighlightedLineList();

            // For now just use first line

            int lineFactor = 15;
            float lineFloat = e.getY() / lineFactor;
            int line = ((int) lineFloat) + 1;
             
            List<FileChange> changeList = file.getChanges();

            for(FileChange change : changeList) {
                if(change.getMarkerType() == FileChange.MARKER_HIGHLIGHT || change.getMarkerType() == FileChange.MARKER_UNDERLINE) {
                    if(line >= change.getStartLine() && line <= change.getEndLine()) {
                        print(change.getUser().getUsername() + " " + change.getType() + " this " + change.getMemberType() +".");
                    }
                }
                else if(change.getMarkerType() == FileChange.MARKER_NEW_FILE) {
                    if(line == change.getStartLine()) {
                        print(change.getUser().getUsername() + " " + change.getType() + " this " + change.getMemberType() +".");
                    }
                }
            }
        }

        @Override
        public void mouseReleased(MouseEvent e) {
        }

        @Override
        public void mouseEntered(MouseEvent e) {
        }

        @Override
        public void mouseExited(MouseEvent e) {
        }
    };
}
